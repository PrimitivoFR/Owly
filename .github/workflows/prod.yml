# This is a basic workflow to help you get started with Actions

name: CI-Test-DockerBuildProd

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# Won't run if we don't tag
on:
  push:
    tags:
      - '*'

jobs:
  docker-test-build-prod:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: BuildCompose
      run: docker-compose -f docker-compose.yml -f docker-compose.test.yml build
        
    - name: TestCompose
      run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from server
      
    - name: GithubPkg-Docker-owly-client
      uses: matootie/github-docker@v3.0.0
      with:
        accessToken:  ${{ secrets.GITHUB_TOKEN }}
        context: ./owly-client
        imageName: owly-client
    
    - name: GithubPkg-Docker-owly-elasticsearch
      uses: matootie/github-docker@v3.0.0
      with:
        accessToken:  ${{ secrets.GITHUB_TOKEN }}
        context: ./elasticsearch
        imageName: owly-elasticsearch
    
    - name: DockerBuild-init_server_image
      run: docker build -t init_server_image ./server/
      
    - name: GithubPkg-Docker-auth_server
      uses: matootie/github-docker@v3.0.0
      with:
        accessToken:  ${{ secrets.GITHUB_TOKEN }}
        context: ./server/auth
        imageName: owly-server-auth
  
    - name: GithubPkg-Docker-chatroom_server
      uses: matootie/github-docker@v3.0.0
      with:
        accessToken:  ${{ secrets.GITHUB_TOKEN }}
        context: ./server/chatroom
        imageName: owly-server-chatroom
    
    - name: GithubPkg-Docker-user_server
      uses: matootie/github-docker@v3.0.0
      with:
        accessToken:  ${{ secrets.GITHUB_TOKEN }}
        context: ./server/user
        imageName: owly-server-user
    
    - name: GithubPkg-Docker-message_server
      uses: matootie/github-docker@v3.0.0
      with:
        accessToken:  ${{ secrets.GITHUB_TOKEN }}
        context: ./server/message
        imageName: owly-server-message
      
    - name: DiscordWebHook-CI-FAILURE
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        webhook: ${{ secrets.CI_DISCORD_WEBHOOK }}

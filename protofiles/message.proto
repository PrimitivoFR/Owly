// GO: protoc protofiles/message.proto --go_out=plugins=grpc:./server/
// TS: protoc --ts_out="service=grpc-web:owly-client/src" protofiles/message.proto

syntax = "proto3";

package message;

option go_package ="message/messagepb";

message Attachments {
    string fileName =1;
    string bucket = 2;
}

message historyMessage {
    int64 timestamp = 1;
    string content = 2;
}

message Message {
    string authorUUID = 1;
    string chatroomID = 2;
    string authorNAME = 3;
    string content = 4;
    int64 timestamp = 5;
    bool hasFileAttached = 6;
    repeated Attachments attach = 7;
    bool isAnswer = 8;
    string answersTo = 9;
    string id = 10;
    repeated historyMessage history = 11;
}

message StreamMessagesByChatroomRequest {
    string chatroomID = 1;
}

message StreamMessagesByChatroomResponse {
    string operation = 1;
    Message message = 2;
}

message SendMessageRequest {
    Message message = 1; 
}

message SendMessageResponse {
    bool success = 1;
}

message GetMessagesByChatroomRequest {
    string chatroomID = 1;
}

message GetMessagesByChatroomResponse {
    repeated Message messages = 1; 
}

message DeleteMessageRequest {
    string messageID = 1;
    string chatroomID = 2;
}

message DeleteMessageResponse {
    bool success = 1;
}

message UpdateMessageContentRequest {
    string messageId = 1;
    string chatroomId = 2;
    string newContent = 3;
}

message UpdateMessageContentResponse {
    bool success = 1;
    Message message = 2; 
}

service MessageService {
    rpc StreamMessagesByChatroom(StreamMessagesByChatroomRequest) returns (stream StreamMessagesByChatroomResponse) {}
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}
    rpc GetMessagesByChatroom(GetMessagesByChatroomRequest) returns (GetMessagesByChatroomResponse) {}
    rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse) {}
    rpc UpdateMessageContent(UpdateMessageContentRequest) returns (UpdateMessageContentResponse) {}
}
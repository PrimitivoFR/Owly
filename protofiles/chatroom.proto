// GO: protoc protofiles/chatroom.proto --go_out=plugins=grpc:./server/
// TS: protoc --ts_out="service=grpc-web:owly-client/src" protofiles/chatroom.proto

syntax = "proto3";

package chatroom;

option go_package ="chatroom/chatroompb";

message ChatroomUser {
    string uuid = 1;
    string username = 2;
}

message Chatroom {
    string name = 1;
    string id = 2;
    string owner = 3;
    repeated ChatroomUser users = 4;
}

message CreateChatroomRequest {
    string name = 1;
    repeated string users = 2;
}

message CreateChatroomResponse {
    bool success = 1;
    string ID = 2;
}

message GetChatroomsByUserRequest {
}

message GetChatroomsByUserResponse {
    bool success = 1;
    int64 count = 2;
    repeated Chatroom chatrooms = 3;
}

message DeleteChatroomRequest {
    string chatroomId = 1;
}

message DeleteChatroomResponse {
    bool success = 1;
}

message LeaveChatroomRequest {
    string chatroomId = 1;
}

message LeaveChatroomResponse {
    bool success = 1;
}

message TranferOwnershipRequest {
    string chatroomId = 1;
    string ownerId = 2;
}

message TranferOwnershipResponse {
    bool success = 1;
}

service ChatroomService {
    rpc CreateChatroom(CreateChatroomRequest) returns(CreateChatroomResponse) {}
    rpc GetChatroomsByUser(GetChatroomsByUserRequest) returns (GetChatroomsByUserResponse) {}
    rpc DeleteChatroom(DeleteChatroomRequest) returns(DeleteChatroomResponse) {}
    rpc LeaveChatroom(LeaveChatroomRequest) returns(LeaveChatroomResponse) {}
    rpc TransferOwnership(TranferOwnershipRequest) returns (TranferOwnershipResponse) {}
}
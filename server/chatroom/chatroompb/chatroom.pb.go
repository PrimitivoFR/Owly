// GO: protoc protofiles/chatroom.proto --go_out=plugins=grpc:./server/
// TS: protoc --ts_out="service=grpc-web:owly-client/src" protofiles/chatroom.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: protofiles/chatroom.proto

package chatroompb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ChatroomUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ChatroomUser) Reset() {
	*x = ChatroomUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatroomUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatroomUser) ProtoMessage() {}

func (x *ChatroomUser) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatroomUser.ProtoReflect.Descriptor instead.
func (*ChatroomUser) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{0}
}

func (x *ChatroomUser) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ChatroomUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type Chatroom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id    string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Owner string          `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Users []*ChatroomUser `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Chatroom) Reset() {
	*x = Chatroom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chatroom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chatroom) ProtoMessage() {}

func (x *Chatroom) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chatroom.ProtoReflect.Descriptor instead.
func (*Chatroom) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{1}
}

func (x *Chatroom) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chatroom) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chatroom) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Chatroom) GetUsers() []*ChatroomUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateChatroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Users []string `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *CreateChatroomRequest) Reset() {
	*x = CreateChatroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatroomRequest) ProtoMessage() {}

func (x *CreateChatroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatroomRequest.ProtoReflect.Descriptor instead.
func (*CreateChatroomRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{2}
}

func (x *CreateChatroomRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChatroomRequest) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateChatroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ID      string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *CreateChatroomResponse) Reset() {
	*x = CreateChatroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatroomResponse) ProtoMessage() {}

func (x *CreateChatroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatroomResponse.ProtoReflect.Descriptor instead.
func (*CreateChatroomResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{3}
}

func (x *CreateChatroomResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateChatroomResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetChatroomsByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetChatroomsByUserRequest) Reset() {
	*x = GetChatroomsByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatroomsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatroomsByUserRequest) ProtoMessage() {}

func (x *GetChatroomsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatroomsByUserRequest.ProtoReflect.Descriptor instead.
func (*GetChatroomsByUserRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{4}
}

type GetChatroomsByUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Count     int64       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Chatrooms []*Chatroom `protobuf:"bytes,3,rep,name=chatrooms,proto3" json:"chatrooms,omitempty"`
}

func (x *GetChatroomsByUserResponse) Reset() {
	*x = GetChatroomsByUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatroomsByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatroomsByUserResponse) ProtoMessage() {}

func (x *GetChatroomsByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatroomsByUserResponse.ProtoReflect.Descriptor instead.
func (*GetChatroomsByUserResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{5}
}

func (x *GetChatroomsByUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetChatroomsByUserResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetChatroomsByUserResponse) GetChatrooms() []*Chatroom {
	if x != nil {
		return x.Chatrooms
	}
	return nil
}

type DeleteChatroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatroomId string `protobuf:"bytes,1,opt,name=chatroomId,proto3" json:"chatroomId,omitempty"`
}

func (x *DeleteChatroomRequest) Reset() {
	*x = DeleteChatroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatroomRequest) ProtoMessage() {}

func (x *DeleteChatroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatroomRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatroomRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteChatroomRequest) GetChatroomId() string {
	if x != nil {
		return x.ChatroomId
	}
	return ""
}

type DeleteChatroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteChatroomResponse) Reset() {
	*x = DeleteChatroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatroomResponse) ProtoMessage() {}

func (x *DeleteChatroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatroomResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatroomResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteChatroomResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LeaveChatroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatroomId string `protobuf:"bytes,1,opt,name=chatroomId,proto3" json:"chatroomId,omitempty"`
}

func (x *LeaveChatroomRequest) Reset() {
	*x = LeaveChatroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveChatroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveChatroomRequest) ProtoMessage() {}

func (x *LeaveChatroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveChatroomRequest.ProtoReflect.Descriptor instead.
func (*LeaveChatroomRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{8}
}

func (x *LeaveChatroomRequest) GetChatroomId() string {
	if x != nil {
		return x.ChatroomId
	}
	return ""
}

type LeaveChatroomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *LeaveChatroomResponse) Reset() {
	*x = LeaveChatroomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveChatroomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveChatroomResponse) ProtoMessage() {}

func (x *LeaveChatroomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveChatroomResponse.ProtoReflect.Descriptor instead.
func (*LeaveChatroomResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{9}
}

func (x *LeaveChatroomResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TransferOwnershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatroomId string `protobuf:"bytes,1,opt,name=chatroomId,proto3" json:"chatroomId,omitempty"`
	NewOwnerId string `protobuf:"bytes,2,opt,name=newOwnerId,proto3" json:"newOwnerId,omitempty"`
}

func (x *TransferOwnershipRequest) Reset() {
	*x = TransferOwnershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferOwnershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOwnershipRequest) ProtoMessage() {}

func (x *TransferOwnershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOwnershipRequest.ProtoReflect.Descriptor instead.
func (*TransferOwnershipRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{10}
}

func (x *TransferOwnershipRequest) GetChatroomId() string {
	if x != nil {
		return x.ChatroomId
	}
	return ""
}

func (x *TransferOwnershipRequest) GetNewOwnerId() string {
	if x != nil {
		return x.NewOwnerId
	}
	return ""
}

type TransferOwnershipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *TransferOwnershipResponse) Reset() {
	*x = TransferOwnershipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_chatroom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferOwnershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOwnershipResponse) ProtoMessage() {}

func (x *TransferOwnershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_chatroom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOwnershipResponse.ProtoReflect.Descriptor instead.
func (*TransferOwnershipResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_chatroom_proto_rawDescGZIP(), []int{11}
}

func (x *TransferOwnershipResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_protofiles_chatroom_proto protoreflect.FileDescriptor

var file_protofiles_chatroom_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x3e, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x42, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7e, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f,
	0x6f, 0x6d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x37, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x36, 0x0a, 0x14, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5a, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xd6, 0x03, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x1f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x1e,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5e, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x15, 0x5a, 0x13, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protofiles_chatroom_proto_rawDescOnce sync.Once
	file_protofiles_chatroom_proto_rawDescData = file_protofiles_chatroom_proto_rawDesc
)

func file_protofiles_chatroom_proto_rawDescGZIP() []byte {
	file_protofiles_chatroom_proto_rawDescOnce.Do(func() {
		file_protofiles_chatroom_proto_rawDescData = protoimpl.X.CompressGZIP(file_protofiles_chatroom_proto_rawDescData)
	})
	return file_protofiles_chatroom_proto_rawDescData
}

var file_protofiles_chatroom_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protofiles_chatroom_proto_goTypes = []interface{}{
	(*ChatroomUser)(nil),               // 0: chatroom.ChatroomUser
	(*Chatroom)(nil),                   // 1: chatroom.Chatroom
	(*CreateChatroomRequest)(nil),      // 2: chatroom.CreateChatroomRequest
	(*CreateChatroomResponse)(nil),     // 3: chatroom.CreateChatroomResponse
	(*GetChatroomsByUserRequest)(nil),  // 4: chatroom.GetChatroomsByUserRequest
	(*GetChatroomsByUserResponse)(nil), // 5: chatroom.GetChatroomsByUserResponse
	(*DeleteChatroomRequest)(nil),      // 6: chatroom.DeleteChatroomRequest
	(*DeleteChatroomResponse)(nil),     // 7: chatroom.DeleteChatroomResponse
	(*LeaveChatroomRequest)(nil),       // 8: chatroom.LeaveChatroomRequest
	(*LeaveChatroomResponse)(nil),      // 9: chatroom.LeaveChatroomResponse
	(*TransferOwnershipRequest)(nil),   // 10: chatroom.TransferOwnershipRequest
	(*TransferOwnershipResponse)(nil),  // 11: chatroom.TransferOwnershipResponse
}
var file_protofiles_chatroom_proto_depIdxs = []int32{
	0,  // 0: chatroom.Chatroom.users:type_name -> chatroom.ChatroomUser
	1,  // 1: chatroom.GetChatroomsByUserResponse.chatrooms:type_name -> chatroom.Chatroom
	2,  // 2: chatroom.ChatroomService.CreateChatroom:input_type -> chatroom.CreateChatroomRequest
	4,  // 3: chatroom.ChatroomService.GetChatroomsByUser:input_type -> chatroom.GetChatroomsByUserRequest
	6,  // 4: chatroom.ChatroomService.DeleteChatroom:input_type -> chatroom.DeleteChatroomRequest
	8,  // 5: chatroom.ChatroomService.LeaveChatroom:input_type -> chatroom.LeaveChatroomRequest
	10, // 6: chatroom.ChatroomService.TransferOwnership:input_type -> chatroom.TransferOwnershipRequest
	3,  // 7: chatroom.ChatroomService.CreateChatroom:output_type -> chatroom.CreateChatroomResponse
	5,  // 8: chatroom.ChatroomService.GetChatroomsByUser:output_type -> chatroom.GetChatroomsByUserResponse
	7,  // 9: chatroom.ChatroomService.DeleteChatroom:output_type -> chatroom.DeleteChatroomResponse
	9,  // 10: chatroom.ChatroomService.LeaveChatroom:output_type -> chatroom.LeaveChatroomResponse
	11, // 11: chatroom.ChatroomService.TransferOwnership:output_type -> chatroom.TransferOwnershipResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_protofiles_chatroom_proto_init() }
func file_protofiles_chatroom_proto_init() {
	if File_protofiles_chatroom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protofiles_chatroom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatroomUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chatroom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatroomsByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatroomsByUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveChatroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveChatroomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferOwnershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_chatroom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferOwnershipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protofiles_chatroom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protofiles_chatroom_proto_goTypes,
		DependencyIndexes: file_protofiles_chatroom_proto_depIdxs,
		MessageInfos:      file_protofiles_chatroom_proto_msgTypes,
	}.Build()
	File_protofiles_chatroom_proto = out.File
	file_protofiles_chatroom_proto_rawDesc = nil
	file_protofiles_chatroom_proto_goTypes = nil
	file_protofiles_chatroom_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatroomServiceClient is the client API for ChatroomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatroomServiceClient interface {
	CreateChatroom(ctx context.Context, in *CreateChatroomRequest, opts ...grpc.CallOption) (*CreateChatroomResponse, error)
	GetChatroomsByUser(ctx context.Context, in *GetChatroomsByUserRequest, opts ...grpc.CallOption) (*GetChatroomsByUserResponse, error)
	DeleteChatroom(ctx context.Context, in *DeleteChatroomRequest, opts ...grpc.CallOption) (*DeleteChatroomResponse, error)
	LeaveChatroom(ctx context.Context, in *LeaveChatroomRequest, opts ...grpc.CallOption) (*LeaveChatroomResponse, error)
	TransferOwnership(ctx context.Context, in *TransferOwnershipRequest, opts ...grpc.CallOption) (*TransferOwnershipResponse, error)
}

type chatroomServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatroomServiceClient(cc grpc.ClientConnInterface) ChatroomServiceClient {
	return &chatroomServiceClient{cc}
}

func (c *chatroomServiceClient) CreateChatroom(ctx context.Context, in *CreateChatroomRequest, opts ...grpc.CallOption) (*CreateChatroomResponse, error) {
	out := new(CreateChatroomResponse)
	err := c.cc.Invoke(ctx, "/chatroom.ChatroomService/CreateChatroom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatroomServiceClient) GetChatroomsByUser(ctx context.Context, in *GetChatroomsByUserRequest, opts ...grpc.CallOption) (*GetChatroomsByUserResponse, error) {
	out := new(GetChatroomsByUserResponse)
	err := c.cc.Invoke(ctx, "/chatroom.ChatroomService/GetChatroomsByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatroomServiceClient) DeleteChatroom(ctx context.Context, in *DeleteChatroomRequest, opts ...grpc.CallOption) (*DeleteChatroomResponse, error) {
	out := new(DeleteChatroomResponse)
	err := c.cc.Invoke(ctx, "/chatroom.ChatroomService/DeleteChatroom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatroomServiceClient) LeaveChatroom(ctx context.Context, in *LeaveChatroomRequest, opts ...grpc.CallOption) (*LeaveChatroomResponse, error) {
	out := new(LeaveChatroomResponse)
	err := c.cc.Invoke(ctx, "/chatroom.ChatroomService/LeaveChatroom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatroomServiceClient) TransferOwnership(ctx context.Context, in *TransferOwnershipRequest, opts ...grpc.CallOption) (*TransferOwnershipResponse, error) {
	out := new(TransferOwnershipResponse)
	err := c.cc.Invoke(ctx, "/chatroom.ChatroomService/TransferOwnership", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatroomServiceServer is the server API for ChatroomService service.
type ChatroomServiceServer interface {
	CreateChatroom(context.Context, *CreateChatroomRequest) (*CreateChatroomResponse, error)
	GetChatroomsByUser(context.Context, *GetChatroomsByUserRequest) (*GetChatroomsByUserResponse, error)
	DeleteChatroom(context.Context, *DeleteChatroomRequest) (*DeleteChatroomResponse, error)
	LeaveChatroom(context.Context, *LeaveChatroomRequest) (*LeaveChatroomResponse, error)
	TransferOwnership(context.Context, *TransferOwnershipRequest) (*TransferOwnershipResponse, error)
}

// UnimplementedChatroomServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatroomServiceServer struct {
}

func (*UnimplementedChatroomServiceServer) CreateChatroom(context.Context, *CreateChatroomRequest) (*CreateChatroomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChatroom not implemented")
}
func (*UnimplementedChatroomServiceServer) GetChatroomsByUser(context.Context, *GetChatroomsByUserRequest) (*GetChatroomsByUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatroomsByUser not implemented")
}
func (*UnimplementedChatroomServiceServer) DeleteChatroom(context.Context, *DeleteChatroomRequest) (*DeleteChatroomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChatroom not implemented")
}
func (*UnimplementedChatroomServiceServer) LeaveChatroom(context.Context, *LeaveChatroomRequest) (*LeaveChatroomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveChatroom not implemented")
}
func (*UnimplementedChatroomServiceServer) TransferOwnership(context.Context, *TransferOwnershipRequest) (*TransferOwnershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferOwnership not implemented")
}

func RegisterChatroomServiceServer(s *grpc.Server, srv ChatroomServiceServer) {
	s.RegisterService(&_ChatroomService_serviceDesc, srv)
}

func _ChatroomService_CreateChatroom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateChatroomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatroomServiceServer).CreateChatroom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatroom.ChatroomService/CreateChatroom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatroomServiceServer).CreateChatroom(ctx, req.(*CreateChatroomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatroomService_GetChatroomsByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChatroomsByUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatroomServiceServer).GetChatroomsByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatroom.ChatroomService/GetChatroomsByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatroomServiceServer).GetChatroomsByUser(ctx, req.(*GetChatroomsByUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatroomService_DeleteChatroom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChatroomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatroomServiceServer).DeleteChatroom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatroom.ChatroomService/DeleteChatroom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatroomServiceServer).DeleteChatroom(ctx, req.(*DeleteChatroomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatroomService_LeaveChatroom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveChatroomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatroomServiceServer).LeaveChatroom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatroom.ChatroomService/LeaveChatroom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatroomServiceServer).LeaveChatroom(ctx, req.(*LeaveChatroomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatroomService_TransferOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatroomServiceServer).TransferOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatroom.ChatroomService/TransferOwnership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatroomServiceServer).TransferOwnership(ctx, req.(*TransferOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatroomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatroom.ChatroomService",
	HandlerType: (*ChatroomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateChatroom",
			Handler:    _ChatroomService_CreateChatroom_Handler,
		},
		{
			MethodName: "GetChatroomsByUser",
			Handler:    _ChatroomService_GetChatroomsByUser_Handler,
		},
		{
			MethodName: "DeleteChatroom",
			Handler:    _ChatroomService_DeleteChatroom_Handler,
		},
		{
			MethodName: "LeaveChatroom",
			Handler:    _ChatroomService_LeaveChatroom_Handler,
		},
		{
			MethodName: "TransferOwnership",
			Handler:    _ChatroomService_TransferOwnership_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protofiles/chatroom.proto",
}
